# docker-compose.yml (para desarrollo y pruebas locales)
version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80" # Expón el puerto 80 de Nginx al puerto 80 del host
    depends_on:
      - backend # Asegura que el backend inicie (no garantiza que esté listo)
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000" # Expón el puerto 5000 del backend al 5000 del host
    environment:
      # Sobrescribe MONGODB_URI para usar el servicio 'mongo'
      MONGODB_URI: mongodb://mongo:27017/tallerDevopsDB
      PORT: 5000
      NODE_ENV: development # O cambia a production si pruebas el build de prod
      # Otros secrets podrían ir aquí o montarse desde un archivo
    depends_on:
      - mongo # Depende del servicio de la base de datos
    volumes:
       - ./backend:/app
       - /app/node_modules
    networks:
      - app-network

  mongo:
    image: mongo:latest # Imagen oficial de MongoDB
    ports:
      - "27017:27017" # Expón el puerto de Mongo si necesitas acceso externo (Mongo Compass)
    volumes:
      - mongo-data:/data/db # Volumen persistente para los datos
    networks:
      - app-network

networks:
  app-network:
    driver: bridge # Red interna para que los contenedores se comuniquen

volumes:
  mongo-data:
    driver: local # Docker gestiona el volumen en el host